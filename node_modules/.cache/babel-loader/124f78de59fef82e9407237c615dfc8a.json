{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Vue } from '../vue';\nimport { EVENT_NAME_INPUT } from '../constants/events';\nimport { PROP_TYPE_ANY } from '../constants/props';\nimport { makeProp } from './props';\nexport var makeModelMixin = function makeModelMixin(prop) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? PROP_TYPE_ANY : _ref$type,\n      _ref$defaultValue = _ref.defaultValue,\n      defaultValue = _ref$defaultValue === void 0 ? undefined : _ref$defaultValue,\n      _ref$validator = _ref.validator,\n      validator = _ref$validator === void 0 ? undefined : _ref$validator,\n      _ref$event = _ref.event,\n      event = _ref$event === void 0 ? EVENT_NAME_INPUT : _ref$event;\n\n  var props = _defineProperty({}, prop, makeProp(type, defaultValue, validator)); // @vue/component\n\n\n  var mixin = Vue.extend({\n    model: {\n      prop: prop,\n      event: event\n    },\n    props: props\n  });\n  return {\n    mixin: mixin,\n    props: props,\n    prop: prop,\n    event: event\n  };\n};","map":null,"metadata":{},"sourceType":"module"}