{"ast":null,"code":"import { Vue } from '../../vue';\nimport { NAME_AVATAR_GROUP } from '../../constants/components';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_STRING, PROP_TYPE_NUMBER_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { mathMax, mathMin } from '../../utils/math';\nimport { toFloat } from '../../utils/number';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { computeSize } from './avatar'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  overlap: makeProp(PROP_TYPE_NUMBER_STRING, 0.3),\n  // Child avatars will prefer this prop (if set) over their own\n  rounded: makeProp(PROP_TYPE_BOOLEAN_STRING, false),\n  // Child avatars will always use this over their own size\n  size: makeProp(PROP_TYPE_STRING),\n  // Child avatars will prefer this prop (if set) over their own\n  square: makeProp(PROP_TYPE_BOOLEAN, false),\n  tag: makeProp(PROP_TYPE_STRING, 'div'),\n  // Child avatars will prefer this variant over their own\n  variant: makeProp(PROP_TYPE_STRING)\n}, NAME_AVATAR_GROUP); // --- Main component ---\n// @vue/component\n\nexport var BAvatarGroup = /*#__PURE__*/Vue.extend({\n  name: NAME_AVATAR_GROUP,\n  mixins: [normalizeSlotMixin],\n  provide: function provide() {\n    return {\n      bvAvatarGroup: this\n    };\n  },\n  props: props,\n  computed: {\n    computedSize: function computedSize() {\n      return computeSize(this.size);\n    },\n    overlapScale: function overlapScale() {\n      return mathMin(mathMax(toFloat(this.overlap, 0), 0), 1) / 2;\n    },\n    paddingStyle: function paddingStyle() {\n      var value = this.computedSize;\n      value = value ? \"calc(\".concat(value, \" * \").concat(this.overlapScale, \")\") : null;\n      return value ? {\n        paddingLeft: value,\n        paddingRight: value\n      } : {};\n    }\n  },\n  render: function render(h) {\n    var $inner = h('div', {\n      staticClass: 'b-avatar-group-inner',\n      style: this.paddingStyle\n    }, this.normalizeSlot());\n    return h(this.tag, {\n      staticClass: 'b-avatar-group',\n      attrs: {\n        role: 'group'\n      }\n    }, [$inner]);\n  }\n});","map":null,"metadata":{},"sourceType":"module"}