{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Vue } from '../../vue';\nimport { NAME_NAVBAR } from '../../constants/components';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_BOOLEAN_STRING, PROP_TYPE_STRING } from '../../constants/props';\nimport { getBreakpoints } from '../../utils/config';\nimport { isTag } from '../../utils/dom';\nimport { isString } from '../../utils/inspect';\nimport { makeProp, makePropsConfigurable } from '../../utils/props';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  fixed: makeProp(PROP_TYPE_STRING),\n  print: makeProp(PROP_TYPE_BOOLEAN, false),\n  sticky: makeProp(PROP_TYPE_BOOLEAN, false),\n  tag: makeProp(PROP_TYPE_STRING, 'nav'),\n  toggleable: makeProp(PROP_TYPE_BOOLEAN_STRING, false),\n  type: makeProp(PROP_TYPE_STRING, 'light'),\n  variant: makeProp(PROP_TYPE_STRING)\n}, NAME_NAVBAR); // --- Main component ---\n// @vue/component\n\nexport var BNavbar = /*#__PURE__*/Vue.extend({\n  name: NAME_NAVBAR,\n  mixins: [normalizeSlotMixin],\n  provide: function provide() {\n    return {\n      bvNavbar: this\n    };\n  },\n  props: props,\n  computed: {\n    breakpointClass: function breakpointClass() {\n      var toggleable = this.toggleable;\n      var xs = getBreakpoints()[0];\n      var breakpoint = null;\n\n      if (toggleable && isString(toggleable) && toggleable !== xs) {\n        breakpoint = \"navbar-expand-\".concat(toggleable);\n      } else if (toggleable === false) {\n        breakpoint = 'navbar-expand';\n      }\n\n      return breakpoint;\n    }\n  },\n  render: function render(h) {\n    var _ref;\n\n    var tag = this.tag,\n        type = this.type,\n        variant = this.variant,\n        fixed = this.fixed;\n    return h(tag, {\n      staticClass: 'navbar',\n      class: [(_ref = {\n        'd-print': this.print,\n        'sticky-top': this.sticky\n      }, _defineProperty(_ref, \"navbar-\".concat(type), type), _defineProperty(_ref, \"bg-\".concat(variant), variant), _defineProperty(_ref, \"fixed-\".concat(fixed), fixed), _ref), this.breakpointClass],\n      attrs: {\n        role: isTag(tag, 'nav') ? null : 'navigation'\n      }\n    }, [this.normalizeSlot()]);\n  }\n});","map":null,"metadata":{},"sourceType":"module"}